name: Build & Release Luminara GUI
permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Version for release'
        required: true
        default: 'v0.0.1'
        
jobs:
  gui-build:
    name: Build Luminara GUI for different operating systems
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout The Main Branch
        uses: actions/checkout@v3

      - name: Setup Oracle Open JDK 25
        uses: actions/setup-java@v5.0.0
        with:
          java-version: 25
          distribution: oracle
          
      - name: Build Jlink Runtime
        run: mvn clean javafx:jlink

      - name: Rename Build Zip
        shell: bash
        run: mv target/app.zip target/Luminara-${{ matrix.os }}-${{ github.event.inputs.release_version }}.zip
        
      - name: Add Luncher Scripts
        run: |
          cp scripts/runApp.bat build/image
          cp scripts/runApp.sh build/image
          chmod +x build/image/runApp.sh

      - name: Upload Artifact 
        uses: actions/upload-artifact@v4
        with:
          name: Luminara-GUI-${{ matrix.os }}
          path: target/Luminara-${{ matrix.os }}-${{ github.event.inputs.release_version }}.zip

  release-upload:
    name: Create release and upload the GUI artifacts
    needs: gui-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download GUI Builds From Artifact
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Create A New Release Object
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.event.inputs.release_version }}
          release_name: ${{ github.event.inputs.release_version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload GUI Zips To Release Object
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          tag_name: ${{ github.event.inputs.release_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
