name: Build & Release Luminara GUI

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Version for release'
        required: true
        default: 'v0.0.1'
        
jobs:
  gui-build:
    name: Build Luminara GUI for different operating systems
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v5.0.0
        with:
          java-version: 25
          distribution: oracle
          
      - name: Build jlink runtime
        run: mvn clean javafx:jlink # add the porfile for the cli when needed

      - name: Create output folder
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            rename target/app.zip target/Luminara-${{ matrix.os }}-${{ github.event.inputs.release_version }}.zip
          else
            mv target/app.zip target/Luminara-${{ matrix.os }}-${{ github.event.inputs.release_version }}.zip
          fi
          
      - uses: actions/upload-artifact@v4
        with:
          name: Luminara-GUI-${{ matrix.os }}
          path: Luminara-${{ matrix.os }}-${{ github.event.inputs.release_version }}.zip

  release-upload:
    name: Create release and upload the GUI artifacts
    needs: gui-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download GUI atrifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.event.inputs.release_version }}
          release_name: ${{ github.event.inputs.release_version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Upload GUI zips to release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/* 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
