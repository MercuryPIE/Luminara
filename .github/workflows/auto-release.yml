name: Build & Release Luminara GUI
permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Version for release'
        required: true
        default: 'v0.0.1'
      tags:
        description: 'Comma-separated list of tags to apply to the release'
        required: true
        default: 'untagged'


jobs:
  gui-build:
    name: Build Luminara GUI for different operating systems
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v5.0.0
        with:
          java-version: 25
          distribution: oracle

      - name: Make build script executable
        shell: bash
        run: chmod +x ./scripts/build-gui.sh

      # This step should have the builds archived to the GUI/target/installer directory.
      - name: Run build script
        shell: bash
        run: ./scripts/build.sh ${{ github.event.inputs.release_version }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.build_name }}
          path: ${{ env.build_path }}

  release-upload:
    name: Create release and upload the GUI artifacts
    needs: gui-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download GUI artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create release object
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.event.inputs.tags }}
          release_name: ${{ github.event.inputs.release_version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload gui archives to release
        uses: softprops/action-gh-release@v1
        with:
#          body: << for the change log stuff.
          files: artifacts/**/*
          tag_name: ${{ github.event.inputs.release_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
